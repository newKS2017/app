{"version":3,"sources":["./src/app/knowledge/knowledge.routing.ts","./node_modules/ng-zorro-antd/__ivy_ngcc__/fesm2015/ng-zorro-antd-core-animation.js","./src/app/knowledge/knowledge/knowledge.component.ts","./src/app/knowledge/knowledge/knowledge.component.html","./node_modules/ng-zorro-antd/__ivy_ngcc__/fesm2015/ng-zorro-antd-message.js","./src/app/knowledge/knowledge.service.ts","./src/app/knowledge/knowledge.module.ts"],"names":[],"mappings":"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AAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAsD;AACmK;AAC7J;AAC7B;AAC0B;AACK;AACG;AACZ;AACN;AACA;AACY;AACT;AACU;;AAE5D;AACA;AACA;AACA;AACwC;AACY;AACV;AACY;AACP;AACK;AACP;;AAE7C,qEAAqE;AACrE,gBAAgB,8DAAuB;AACvC,IAAI,4DAAqB;AACzB,IAAI,wDAAiB,kHAAkH,CAAC,2DAAoB,MAAM,gBAAgB,2DAAoB,GAAG,oDAAoD,EAAE;AAC/P,IAAI,0DAAmB;AACvB,CAAC;AACD;AACA,IAAI,wDAAiB;AACrB,CAAC;AACD,mDAAmD;AACnD,IAAI,uDAAgB;AACpB,CAAC;AACD,mDAAmD;AACnD,IAAI,uDAAgB;AACpB,CAAC;AACD,mDAAmD;AACnD,IAAI,uDAAgB;AACpB,CAAC;AACD,mDAAmD;AACnD,IAAI,uDAAgB;AACpB,CAAC;AACD,mDAAmD;AACnD,IAAI,uDAAgB;AACpB,CAAC;AACD,8DAA8D;AAC9D,IAAI,qEAA8B;AAClC,IAAI,uDAAgB;AACpB,IAAI,mEAA4B;AAChC,CAAC;AACD,mBAAmB,2DAAoB;AACvC,IAAI,uDAAgB;AACpB,IAAI,wDAAiB,uCAAuC,4DAAqB;AACjF,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,qBAAqB,GAAG,gBAAgB;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,oCAAoC,mEAAe;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,4CAAO;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,4CAAO;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,wCAAwC;AACvD,8BAA8B,wCAAwC;AACtE;AACA;AACA,0EAA0E,0CAA0C,+DAAwB,CAAC,+DAAwB,GAAG,+DAAwB,CAAC,yEAAsB,GAAG;AAC1N,8BAA8B,+DAAwB,EAAE,+BAA+B;AACvF;AACA,KAAK,OAAO,+DAAiB,EAAE;AAC/B,KAAK,OAAO,yEAAe;AAC3B;AACA,4BAA4B,CAAC,+DAAwB;AACrD,cAAc,uDAAS;AACvB,KAAK,gBAAgB,UAAU,OAAO,+DAAwB,EAAE,GAAG,OAAO,yEAAsB,EAAE,EAAE,EAAE,QAAQ,EAAE;AAChH;AACA;AACA;AACA,6BAA6B,0DAAY;AACzC,yCAAyC,4CAAO;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,6DAAM,oEAAoE,2DAAI;AACpG;AACA;AACA,qCAAqC,2DAA2D;AAChG,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,sDAAsD;AAC3F,aAAa;AACb;AACA;AACA,iCAAiC,sDAAsD;AACvF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wDAAwD,iCAAiC,+DAAwB,CAAC,+DAAwB,GAAG;AAC7I,qBAAqB,+DAAwB,EAAE,sBAAsB;AACrE;AACA,KAAK,OAAO,+DAAiB;AAC7B;AACA,4BAA4B,CAAC,+DAAwB;AACrD,cAAc,uDAAS;AACvB,KAAK,gBAAgB,UAAU,OAAO,+DAAwB,EAAE,EAAE,EAAE,QAAQ,EAAE;;AAE9E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A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","file":"knowledge-knowledge-module.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { KnowledgeComponent } from './knowledge/knowledge.component';\r\n\r\nconst routes: Routes = [\r\n  { path:'',redirectTo:'interview',pathMatch:'full' },\r\n  { path:'interview',component:KnowledgeComponent }\r\n  // { path: '**', component: PageNotFoundComponent }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class KnowledgeRouting { }\r\n\r\nexport const routeds = [\r\n  KnowledgeComponent\r\n]\r\n","import { trigger, state, style, transition, animate, query, stagger } from '@angular/animations';\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nclass AnimationDuration {\n}\nAnimationDuration.SLOW = '0.3s'; // Modal\nAnimationDuration.BASE = '0.2s';\nAnimationDuration.FAST = '0.1s'; // Tooltip\nclass AnimationCurves {\n}\nAnimationCurves.EASE_BASE_OUT = 'cubic-bezier(0.7, 0.3, 0.1, 1)';\nAnimationCurves.EASE_BASE_IN = 'cubic-bezier(0.9, 0, 0.3, 0.7)';\nAnimationCurves.EASE_OUT = 'cubic-bezier(0.215, 0.61, 0.355, 1)';\nAnimationCurves.EASE_IN = 'cubic-bezier(0.55, 0.055, 0.675, 0.19)';\nAnimationCurves.EASE_IN_OUT = 'cubic-bezier(0.645, 0.045, 0.355, 1)';\nAnimationCurves.EASE_OUT_BACK = 'cubic-bezier(0.12, 0.4, 0.29, 1.46)';\nAnimationCurves.EASE_IN_BACK = 'cubic-bezier(0.71, -0.46, 0.88, 0.6)';\nAnimationCurves.EASE_IN_OUT_BACK = 'cubic-bezier(0.71, -0.46, 0.29, 1.46)';\nAnimationCurves.EASE_OUT_CIRC = 'cubic-bezier(0.08, 0.82, 0.17, 1)';\nAnimationCurves.EASE_IN_CIRC = 'cubic-bezier(0.6, 0.04, 0.98, 0.34)';\nAnimationCurves.EASE_IN_OUT_CIRC = 'cubic-bezier(0.78, 0.14, 0.15, 0.86)';\nAnimationCurves.EASE_OUT_QUINT = 'cubic-bezier(0.23, 1, 0.32, 1)';\nAnimationCurves.EASE_IN_QUINT = 'cubic-bezier(0.755, 0.05, 0.855, 0.06)';\nAnimationCurves.EASE_IN_OUT_QUINT = 'cubic-bezier(0.86, 0, 0.07, 1)';\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nconst collapseMotion = trigger('collapseMotion', [\n    state('expanded', style({ height: '*' })),\n    state('collapsed', style({ height: 0, overflow: 'hidden' })),\n    state('hidden', style({ height: 0, overflow: 'hidden', borderTopWidth: '0' })),\n    transition('expanded => collapsed', animate(`150ms ${AnimationCurves.EASE_IN_OUT}`)),\n    transition('expanded => hidden', animate(`150ms ${AnimationCurves.EASE_IN_OUT}`)),\n    transition('collapsed => expanded', animate(`150ms ${AnimationCurves.EASE_IN_OUT}`)),\n    transition('hidden => expanded', animate(`150ms ${AnimationCurves.EASE_IN_OUT}`))\n]);\nconst treeCollapseMotion = trigger('treeCollapseMotion', [\n    transition('* => *', [\n        query('nz-tree-node:leave,nz-tree-builtin-node:leave', [\n            style({ overflow: 'hidden' }),\n            stagger(0, [animate(`150ms ${AnimationCurves.EASE_IN_OUT}`, style({ height: 0, opacity: 0, 'padding-bottom': 0 }))])\n        ], {\n            optional: true\n        }),\n        query('nz-tree-node:enter,nz-tree-builtin-node:enter', [\n            style({ overflow: 'hidden', height: 0, opacity: 0, 'padding-bottom': 0 }),\n            stagger(0, [\n                animate(`150ms ${AnimationCurves.EASE_IN_OUT}`, style({ overflow: 'hidden', height: '*', opacity: '*', 'padding-bottom': '*' }))\n            ])\n        ], {\n            optional: true\n        })\n    ])\n]);\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nconst fadeMotion = trigger('fadeMotion', [\n    transition(':enter', [style({ opacity: 0 }), animate(`${AnimationDuration.BASE}`, style({ opacity: 1 }))]),\n    transition(':leave', [style({ opacity: 1 }), animate(`${AnimationDuration.BASE}`, style({ opacity: 0 }))])\n]);\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nconst helpMotion = trigger('helpMotion', [\n    transition(':enter', [\n        style({\n            opacity: 0,\n            transform: 'translateY(-5px)'\n        }),\n        animate(`${AnimationDuration.SLOW} ${AnimationCurves.EASE_IN_OUT}`, style({\n            opacity: 1,\n            transform: 'translateY(0)'\n        }))\n    ]),\n    transition(':leave', [\n        style({\n            opacity: 1,\n            transform: 'translateY(0)'\n        }),\n        animate(`${AnimationDuration.SLOW} ${AnimationCurves.EASE_IN_OUT}`, style({\n            opacity: 0,\n            transform: 'translateY(-5px)'\n        }))\n    ])\n]);\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nconst moveUpMotion = trigger('moveUpMotion', [\n    transition('* => enter', [\n        style({\n            transformOrigin: '0 0',\n            transform: 'translateY(-100%)',\n            opacity: 0\n        }),\n        animate(`${AnimationDuration.BASE}`, style({\n            transformOrigin: '0 0',\n            transform: 'translateY(0%)',\n            opacity: 1\n        }))\n    ]),\n    transition('* => leave', [\n        style({\n            transformOrigin: '0 0',\n            transform: 'translateY(0%)',\n            opacity: 1\n        }),\n        animate(`${AnimationDuration.BASE}`, style({\n            transformOrigin: '0 0',\n            transform: 'translateY(-100%)',\n            opacity: 0\n        }))\n    ])\n]);\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nconst notificationMotion = trigger('notificationMotion', [\n    state('enterRight', style({ opacity: 1, transform: 'translateX(0)' })),\n    transition('* => enterRight', [style({ opacity: 0, transform: 'translateX(5%)' }), animate('100ms linear')]),\n    state('enterLeft', style({ opacity: 1, transform: 'translateX(0)' })),\n    transition('* => enterLeft', [style({ opacity: 0, transform: 'translateX(-5%)' }), animate('100ms linear')]),\n    state('leave', style({\n        opacity: 0,\n        transform: 'scaleY(0.8)',\n        transformOrigin: '0% 0%'\n    })),\n    transition('* => leave', [\n        style({\n            opacity: 1,\n            transform: 'scaleY(1)',\n            transformOrigin: '0% 0%'\n        }),\n        animate('100ms linear')\n    ])\n]);\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nconst ANIMATION_TRANSITION_IN = `${AnimationDuration.BASE} ${AnimationCurves.EASE_OUT_QUINT}`;\nconst ANIMATION_TRANSITION_OUT = `${AnimationDuration.BASE} ${AnimationCurves.EASE_IN_QUINT}`;\nconst slideMotion = trigger('slideMotion', [\n    state('void', style({\n        opacity: 0,\n        transform: 'scaleY(0.8)'\n    })),\n    state('enter', style({\n        opacity: 1,\n        transform: 'scaleY(1)'\n    })),\n    transition('void => *', [animate(ANIMATION_TRANSITION_IN)]),\n    transition('* => void', [animate(ANIMATION_TRANSITION_OUT)])\n]);\nconst slideAlertMotion = trigger('slideAlertMotion', [\n    transition(':leave', [\n        style({ opacity: 1, transform: 'scaleY(1)', transformOrigin: '0% 0%' }),\n        animate(`${AnimationDuration.SLOW} ${AnimationCurves.EASE_IN_OUT_CIRC}`, style({\n            opacity: 0,\n            transform: 'scaleY(0)',\n            transformOrigin: '0% 0%'\n        }))\n    ])\n]);\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nconst zoomBigMotion = trigger('zoomBigMotion', [\n    transition('void => active', [\n        style({ opacity: 0, transform: 'scale(0.8)' }),\n        animate(`${AnimationDuration.BASE} ${AnimationCurves.EASE_OUT_CIRC}`, style({\n            opacity: 1,\n            transform: 'scale(1)'\n        }))\n    ]),\n    transition('active => void', [\n        style({ opacity: 1, transform: 'scale(1)' }),\n        animate(`${AnimationDuration.BASE} ${AnimationCurves.EASE_IN_OUT_CIRC}`, style({\n            opacity: 0,\n            transform: 'scale(0.8)'\n        }))\n    ])\n]);\nconst zoomBadgeMotion = trigger('zoomBadgeMotion', [\n    transition(':enter', [\n        style({ opacity: 0, transform: 'scale(0) translate(50%, -50%)' }),\n        animate(`${AnimationDuration.SLOW} ${AnimationCurves.EASE_OUT_BACK}`, style({\n            opacity: 1,\n            transform: 'scale(1) translate(50%, -50%)'\n        }))\n    ]),\n    transition(':leave', [\n        style({ opacity: 1, transform: 'scale(1) translate(50%, -50%)' }),\n        animate(`${AnimationDuration.SLOW} ${AnimationCurves.EASE_IN_BACK}`, style({\n            opacity: 0,\n            transform: 'scale(0) translate(50%, -50%)'\n        }))\n    ])\n]);\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { AnimationCurves, AnimationDuration, collapseMotion, fadeMotion, helpMotion, moveUpMotion, notificationMotion, slideAlertMotion, slideMotion, treeCollapseMotion, zoomBadgeMotion, zoomBigMotion };\n\n//# sourceMappingURL=ng-zorro-antd-core-animation.js.map","import { Component, OnInit } from '@angular/core';\r\nimport { KnowledgeService } from '../knowledge.service';\r\n\r\nimport { NzMessageService  } from 'ng-zorro-antd/message';//需要现在module里注册\r\nimport * as pinyin from '../../../assets/js/pinyin.js';\r\n\r\n@Component({\r\n  selector: 'app-knowledge',\r\n  templateUrl: './knowledge.component.html',\r\n  styleUrls: ['./knowledge.component.scss']\r\n})\r\nexport class KnowledgeComponent implements OnInit {\r\n\r\n  constructor(\r\n    private service:KnowledgeService,\r\n    private message:NzMessageService \r\n  ) { }\r\n  \r\n  value:string = '';//搜索框\r\n  nowData:any = [];//存放数据\r\n  indexPage:number = 0;//第几页\r\n\r\n  ngOnInit(): void {\r\n    if(localStorage.getItem('value') || localStorage.getItem('indexPage')){//如果有值，就用值去获取数据\r\n      this.value = localStorage.getItem('value');\r\n      this.submit(this.value,true);\r\n    }else{\r\n      this.nowData = this.service.dataList;\r\n    }\r\n  }\r\n\r\n  ngOnDestroy(){\r\n    localStorage.removeItem('indexPage');\r\n    localStorage.removeItem('value');\r\n  }\r\n\r\n\r\n  // 获取焦点\r\n  focus(){\r\n    console.log('focus')\r\n  }\r\n  // 失去焦点\r\n  blur(){\r\n    console.log('blur')\r\n  }\r\n  // 点击取消\r\n  cancel(){\r\n    console.log('cancel')\r\n  }\r\n  // 点击清除\r\n  clear(value){\r\n    console.log('clear:'+value)\r\n  }\r\n  // 回车触发搜索\r\n  submit(value,isV:boolean = false){\r\n    let arr:any = [];\r\n    this.service.dataList.forEach(it=>{\r\n      if(it.title.indexOf(value) != -1){\r\n        arr.push(it);\r\n      }\r\n    })\r\n    if(arr.length == 0){\r\n      if(isV){//没有数据并且是刷新页面的时候\r\n        if(localStorage.getItem('indexPage')){\r\n          this.indexPage = parseInt(localStorage.getItem('indexPage'));\r\n        }\r\n        this.nowData = this.service.dataList;\r\n      }else{\r\n        this.message.error('没有匹配到数据');\r\n      }\r\n    }else{\r\n      if(isV){\r\n        if(localStorage.getItem('indexPage')){\r\n          this.indexPage = parseInt(localStorage.getItem('indexPage'));\r\n        }\r\n      }else{\r\n        this.indexPage = 0;\r\n        localStorage.setItem('value',value);\r\n        localStorage.setItem('indexPage',this.indexPage.toString());\r\n      }\r\n      this.nowData = arr;\r\n    }\r\n  }\r\n  // 输入触发\r\n  change(value){\r\n    console.log(value)\r\n    let a = '1';\r\n  }\r\n\r\n  // 翻页\r\n  turnPage(isBoolean){\r\n    if(isBoolean){ // 下一页\r\n      if(this.indexPage == this.nowData.length - 1){\r\n        this.message.warning('已经是最后一条数据了');\r\n        return;\r\n      }else{\r\n        this.indexPage++;\r\n      }\r\n    }else{\r\n      if(this.indexPage == 0){\r\n        this.message.warning('已经是第一条数据了');\r\n        return;\r\n      }else{\r\n        this.indexPage--;\r\n      }\r\n    }\r\n    localStorage.setItem('indexPage',this.indexPage.toString());\r\n  }\r\n\r\n\r\n}\r\n","<div class=\"knowledge\">\r\n    <div class=\"search\">\r\n        <SearchBar [placeholder]=\"'搜索'\" [defaultValue]=\"'这是默认值'\" \r\n            [(ngModel)]=\"value\" \r\n            (onBlur)=\"blur()\"\r\n            (onFocus)=\"focus()\"\r\n            (onCancel)=\"cancel()\"\r\n            (onClear)=\"clear(value)\"\r\n            (onSubmit)=\"submit(value)\"\r\n            (ngModelChange)=\"change($event)\">\r\n        </SearchBar>\r\n    </div>\r\n    <div class=\"content\">\r\n        <ng-container *ngFor=\"let it of nowData;let i=index;\">\r\n            <div *ngIf=\"indexPage == i\">\r\n                <h1>{{it.title}}</h1>\r\n                <div [innerHTML]=\"it.content\"></div>\r\n            </div>\r\n        </ng-container>\r\n        <div class=\"page\" *ngIf=\"nowData.length > 0\">\r\n            <span>{{indexPage+1}}</span>\r\n            /\r\n            <span>{{nowData.length}}</span>\r\n        </div>\r\n    </div>\r\n</div>\r\n<a class=\"left\" (click)=\"turnPage(false)\">\r\n    <Icon [type]=\"'left'\" [size]=\"'md'\"></Icon>\r\n</a>\r\n<a class=\"right\" (click)=\"turnPage(true)\">\r\n    <Icon [type]=\"'right'\" [size]=\"'md'\"></Icon>\r\n</a>\r\n<app-footer></app-footer>\r\n","import { ComponentPortal } from '@angular/cdk/portal';\nimport { Directive, ChangeDetectorRef, EventEmitter, Component, ChangeDetectionStrategy, ViewEncapsulation, NgModule, ɵɵdefineInjectable, ɵɵinject, INJECTOR, Injectable, Injector, Input, Output } from '@angular/core';\nimport { NzConfigService } from 'ng-zorro-antd/core/config';\nimport { Subject } from 'rxjs';\nimport { filter, take, takeUntil } from 'rxjs/operators';\nimport { Overlay, OverlayModule } from '@angular/cdk/overlay';\nimport { NzSingletonService } from 'ng-zorro-antd/core/services';\nimport { toCssPixel } from 'ng-zorro-antd/core/util';\nimport { BidiModule } from '@angular/cdk/bidi';\nimport { CommonModule } from '@angular/common';\nimport { NzOutletModule } from 'ng-zorro-antd/core/outlet';\nimport { NzIconModule } from 'ng-zorro-antd/icon';\nimport { moveUpMotion } from 'ng-zorro-antd/core/animation';\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from 'ng-zorro-antd/core/config';\nimport * as ɵngcc2 from '@angular/common';\nimport * as ɵngcc3 from 'ng-zorro-antd/core/services';\nimport * as ɵngcc4 from '@angular/cdk/overlay';\nimport * as ɵngcc5 from 'ng-zorro-antd/core/outlet';\nimport * as ɵngcc6 from 'ng-zorro-antd/icon';\n\nfunction NzMessageContainerComponent_nz_message_1_Template(rf, ctx) { if (rf & 1) {\n    const _r3 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"nz-message\", 2);\n    ɵngcc0.ɵɵlistener(\"destroyed\", function NzMessageContainerComponent_nz_message_1_Template_nz_message_destroyed_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r3); const ctx_r2 = ɵngcc0.ɵɵnextContext(); return ctx_r2.remove($event.id, $event.userAction); });\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const instance_r1 = ctx.$implicit;\n    ɵngcc0.ɵɵproperty(\"instance\", instance_r1);\n} }\nfunction NzMessageComponent_i_4_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"i\", 10);\n} }\nfunction NzMessageComponent_i_5_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"i\", 11);\n} }\nfunction NzMessageComponent_i_6_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"i\", 12);\n} }\nfunction NzMessageComponent_i_7_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"i\", 13);\n} }\nfunction NzMessageComponent_i_8_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"i\", 14);\n} }\nfunction NzMessageComponent_ng_container_9_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵelement(1, \"span\", 15);\n    ɵngcc0.ɵɵelementContainerEnd();\n} if (rf & 2) {\n    const ctx_r5 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"innerHTML\", ctx_r5.instance.content, ɵngcc0.ɵɵsanitizeHtml);\n} }\nlet globalCounter = 0;\nclass NzMNService {\n    constructor(nzSingletonService, overlay, injector) {\n        this.nzSingletonService = nzSingletonService;\n        this.overlay = overlay;\n        this.injector = injector;\n    }\n    remove(id) {\n        if (this.container) {\n            if (id) {\n                this.container.remove(id);\n            }\n            else {\n                this.container.removeAll();\n            }\n        }\n    }\n    getInstanceId() {\n        return `${this.componentPrefix}-${globalCounter++}`;\n    }\n    withContainer(ctor) {\n        let containerInstance = this.nzSingletonService.getSingletonWithKey(this.componentPrefix);\n        if (containerInstance) {\n            return containerInstance;\n        }\n        const overlayRef = this.overlay.create({\n            hasBackdrop: false,\n            scrollStrategy: this.overlay.scrollStrategies.noop(),\n            positionStrategy: this.overlay.position().global()\n        });\n        const componentPortal = new ComponentPortal(ctor, null, this.injector);\n        const componentRef = overlayRef.attach(componentPortal);\n        const overlayPane = overlayRef.overlayElement;\n        overlayPane.style.zIndex = '1010';\n        if (!containerInstance) {\n            this.container = containerInstance = componentRef.instance;\n            this.nzSingletonService.registerSingletonWithKey(this.componentPrefix, containerInstance);\n        }\n        return containerInstance;\n    }\n}\nclass NzMNContainerComponent {\n    constructor(cdr, nzConfigService) {\n        this.cdr = cdr;\n        this.nzConfigService = nzConfigService;\n        this.instances = [];\n        this.destroy$ = new Subject();\n        this.updateConfig();\n    }\n    ngOnInit() {\n        this.subscribeConfigChange();\n    }\n    ngOnDestroy() {\n        this.destroy$.next();\n        this.destroy$.complete();\n    }\n    create(data) {\n        const instance = this.onCreate(data);\n        if (this.instances.length >= this.config.nzMaxStack) {\n            this.instances = this.instances.slice(1);\n        }\n        this.instances = [...this.instances, instance];\n        this.readyInstances();\n        return instance;\n    }\n    remove(id, userAction = false) {\n        this.instances.some((instance, index) => {\n            if (instance.messageId === id) {\n                this.instances.splice(index, 1);\n                this.instances = [...this.instances];\n                this.onRemove(instance, userAction);\n                this.readyInstances();\n                return true;\n            }\n            return false;\n        });\n    }\n    removeAll() {\n        this.instances.forEach(i => this.onRemove(i, false));\n        this.instances = [];\n        this.readyInstances();\n    }\n    onCreate(instance) {\n        instance.options = this.mergeOptions(instance.options);\n        instance.onClose = new Subject();\n        return instance;\n    }\n    onRemove(instance, userAction) {\n        instance.onClose.next(userAction);\n        instance.onClose.complete();\n    }\n    readyInstances() {\n        this.cdr.detectChanges();\n    }\n    mergeOptions(options) {\n        const { nzDuration, nzAnimate, nzPauseOnHover } = this.config;\n        return Object.assign({ nzDuration, nzAnimate, nzPauseOnHover }, options);\n    }\n}\nNzMNContainerComponent.ɵfac = function NzMNContainerComponent_Factory(t) { return new (t || NzMNContainerComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.NzConfigService)); };\nNzMNContainerComponent.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: NzMNContainerComponent });\nNzMNContainerComponent.ctorParameters = () => [\n    { type: ChangeDetectorRef },\n    { type: NzConfigService }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NzMNContainerComponent, [{\n        type: Directive\n    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc1.NzConfigService }]; }, null); })();\nclass NzMNComponent {\n    constructor(cdr) {\n        this.cdr = cdr;\n        this.destroyed = new EventEmitter();\n        this.animationStateChanged = new Subject();\n        this.userAction = false;\n        this.eraseTimer = null;\n    }\n    ngOnInit() {\n        this.options = this.instance.options;\n        if (this.options.nzAnimate) {\n            this.instance.state = 'enter';\n            this.animationStateChanged\n                .pipe(filter(event => event.phaseName === 'done' && event.toState === 'leave'), take(1))\n                .subscribe(() => {\n                clearTimeout(this.closeTimer);\n                this.destroyed.next({ id: this.instance.messageId, userAction: this.userAction });\n            });\n        }\n        this.autoClose = this.options.nzDuration > 0;\n        if (this.autoClose) {\n            this.initErase();\n            this.startEraseTimeout();\n        }\n    }\n    ngOnDestroy() {\n        if (this.autoClose) {\n            this.clearEraseTimeout();\n        }\n        this.animationStateChanged.complete();\n    }\n    onEnter() {\n        if (this.autoClose && this.options.nzPauseOnHover) {\n            this.clearEraseTimeout();\n            this.updateTTL();\n        }\n    }\n    onLeave() {\n        if (this.autoClose && this.options.nzPauseOnHover) {\n            this.startEraseTimeout();\n        }\n    }\n    destroy(userAction = false) {\n        this.userAction = userAction;\n        if (this.options.nzAnimate) {\n            this.instance.state = 'leave';\n            this.cdr.detectChanges();\n            this.closeTimer = setTimeout(() => {\n                this.closeTimer = undefined;\n                this.destroyed.next({ id: this.instance.messageId, userAction: userAction });\n            }, 200);\n        }\n        else {\n            this.destroyed.next({ id: this.instance.messageId, userAction: userAction });\n        }\n    }\n    initErase() {\n        this.eraseTTL = this.options.nzDuration;\n        this.eraseTimingStart = Date.now();\n    }\n    updateTTL() {\n        if (this.autoClose) {\n            this.eraseTTL -= Date.now() - this.eraseTimingStart;\n        }\n    }\n    startEraseTimeout() {\n        if (this.eraseTTL > 0) {\n            this.clearEraseTimeout();\n            this.eraseTimer = setTimeout(() => this.destroy(), this.eraseTTL);\n            this.eraseTimingStart = Date.now();\n        }\n        else {\n            this.destroy();\n        }\n    }\n    clearEraseTimeout() {\n        if (this.eraseTimer !== null) {\n            clearTimeout(this.eraseTimer);\n            this.eraseTimer = null;\n        }\n    }\n}\nNzMNComponent.ɵfac = function NzMNComponent_Factory(t) { return new (t || NzMNComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef)); };\nNzMNComponent.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: NzMNComponent });\nNzMNComponent.ctorParameters = () => [\n    { type: ChangeDetectorRef }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NzMNComponent, [{\n        type: Directive\n    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }]; }, null); })();\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nconst NZ_CONFIG_COMPONENT_NAME = 'message';\nconst NZ_MESSAGE_DEFAULT_CONFIG = {\n    nzAnimate: true,\n    nzDuration: 3000,\n    nzMaxStack: 7,\n    nzPauseOnHover: true,\n    nzTop: 24,\n    nzDirection: 'ltr'\n};\nclass NzMessageContainerComponent extends NzMNContainerComponent {\n    constructor(cdr, nzConfigService) {\n        super(cdr, nzConfigService);\n        this.destroy$ = new Subject();\n        this.dir = 'ltr';\n        this.instances = [];\n        const config = this.nzConfigService.getConfigForComponent(NZ_CONFIG_COMPONENT_NAME);\n        this.dir = (config === null || config === void 0 ? void 0 : config.nzDirection) || 'ltr';\n    }\n    subscribeConfigChange() {\n        this.nzConfigService\n            .getConfigChangeEventForComponent(NZ_CONFIG_COMPONENT_NAME)\n            .pipe(takeUntil(this.destroy$))\n            .subscribe(() => {\n            this.updateConfig();\n            const config = this.nzConfigService.getConfigForComponent(NZ_CONFIG_COMPONENT_NAME);\n            if (config) {\n                const { nzDirection } = config;\n                this.dir = nzDirection || this.dir;\n            }\n        });\n    }\n    updateConfig() {\n        this.config = Object.assign(Object.assign(Object.assign({}, NZ_MESSAGE_DEFAULT_CONFIG), this.config), this.nzConfigService.getConfigForComponent(NZ_CONFIG_COMPONENT_NAME));\n        this.top = toCssPixel(this.config.nzTop);\n        this.cdr.markForCheck();\n    }\n}\nNzMessageContainerComponent.ɵfac = function NzMessageContainerComponent_Factory(t) { return new (t || NzMessageContainerComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.NzConfigService)); };\nNzMessageContainerComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: NzMessageContainerComponent, selectors: [[\"nz-message-container\"]], exportAs: [\"nzMessageContainer\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature], decls: 2, vars: 5, consts: [[1, \"ant-message\"], [3, \"instance\", \"destroyed\", 4, \"ngFor\", \"ngForOf\"], [3, \"instance\", \"destroyed\"]], template: function NzMessageContainerComponent_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n        ɵngcc0.ɵɵtemplate(1, NzMessageContainerComponent_nz_message_1_Template, 1, 1, \"nz-message\", 1);\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵstyleProp(\"top\", ctx.top);\n        ɵngcc0.ɵɵclassProp(\"ant-message-rtl\", ctx.dir === \"rtl\");\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngForOf\", ctx.instances);\n    } }, directives: function () { return [ɵngcc2.NgForOf, NzMessageComponent]; }, encapsulation: 2, changeDetection: 0 });\nNzMessageContainerComponent.ctorParameters = () => [\n    { type: ChangeDetectorRef },\n    { type: NzConfigService }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NzMessageContainerComponent, [{\n        type: Component,\n        args: [{\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                encapsulation: ViewEncapsulation.None,\n                selector: 'nz-message-container',\n                exportAs: 'nzMessageContainer',\n                preserveWhitespaces: false,\n                template: `\n    <div class=\"ant-message\" [class.ant-message-rtl]=\"dir === 'rtl'\" [style.top]=\"top\">\n      <nz-message *ngFor=\"let instance of instances\" [instance]=\"instance\" (destroyed)=\"remove($event.id, $event.userAction)\"></nz-message>\n    </div>\n  `\n            }]\n    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc1.NzConfigService }]; }, null); })();\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nclass NzMessageServiceModule {\n}\nNzMessageServiceModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: NzMessageServiceModule });\nNzMessageServiceModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function NzMessageServiceModule_Factory(t) { return new (t || NzMessageServiceModule)(); } });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NzMessageServiceModule, [{\n        type: NgModule\n    }], null, null); })();\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nclass NzMessageService extends NzMNService {\n    constructor(nzSingletonService, overlay, injector) {\n        super(nzSingletonService, overlay, injector);\n        this.componentPrefix = 'message-';\n    }\n    success(content, options) {\n        return this.createInstance({ type: 'success', content }, options);\n    }\n    error(content, options) {\n        return this.createInstance({ type: 'error', content }, options);\n    }\n    info(content, options) {\n        return this.createInstance({ type: 'info', content }, options);\n    }\n    warning(content, options) {\n        return this.createInstance({ type: 'warning', content }, options);\n    }\n    loading(content, options) {\n        return this.createInstance({ type: 'loading', content }, options);\n    }\n    create(type, content, options) {\n        return this.createInstance({ type, content }, options);\n    }\n    createInstance(message, options) {\n        this.container = this.withContainer(NzMessageContainerComponent);\n        return this.container.create(Object.assign(Object.assign({}, message), {\n            createdAt: new Date(),\n            messageId: this.getInstanceId(),\n            options\n        }));\n    }\n}\nNzMessageService.ɵfac = function NzMessageService_Factory(t) { return new (t || NzMessageService)(ɵngcc0.ɵɵinject(ɵngcc3.NzSingletonService), ɵngcc0.ɵɵinject(ɵngcc4.Overlay), ɵngcc0.ɵɵinject(ɵngcc0.Injector)); };\nNzMessageService.ɵprov = ɵɵdefineInjectable({ factory: function NzMessageService_Factory() { return new NzMessageService(ɵɵinject(NzSingletonService), ɵɵinject(Overlay), ɵɵinject(INJECTOR)); }, token: NzMessageService, providedIn: NzMessageServiceModule });\nNzMessageService.ctorParameters = () => [\n    { type: NzSingletonService },\n    { type: Overlay },\n    { type: Injector }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NzMessageService, [{\n        type: Injectable,\n        args: [{\n                providedIn: NzMessageServiceModule\n            }]\n    }], function () { return [{ type: ɵngcc3.NzSingletonService }, { type: ɵngcc4.Overlay }, { type: ɵngcc0.Injector }]; }, null); })();\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nclass NzMessageComponent extends NzMNComponent {\n    constructor(cdr) {\n        super(cdr);\n        this.destroyed = new EventEmitter();\n    }\n}\nNzMessageComponent.ɵfac = function NzMessageComponent_Factory(t) { return new (t || NzMessageComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef)); };\nNzMessageComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: NzMessageComponent, selectors: [[\"nz-message\"]], inputs: { instance: \"instance\" }, outputs: { destroyed: \"destroyed\" }, exportAs: [\"nzMessage\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature], decls: 10, vars: 9, consts: [[1, \"ant-message-notice\", 3, \"mouseenter\", \"mouseleave\"], [1, \"ant-message-notice-content\"], [1, \"ant-message-custom-content\", 3, \"ngClass\"], [3, \"ngSwitch\"], [\"nz-icon\", \"\", \"nzType\", \"check-circle\", 4, \"ngSwitchCase\"], [\"nz-icon\", \"\", \"nzType\", \"info-circle\", 4, \"ngSwitchCase\"], [\"nz-icon\", \"\", \"nzType\", \"exclamation-circle\", 4, \"ngSwitchCase\"], [\"nz-icon\", \"\", \"nzType\", \"close-circle\", 4, \"ngSwitchCase\"], [\"nz-icon\", \"\", \"nzType\", \"loading\", 4, \"ngSwitchCase\"], [4, \"nzStringTemplateOutlet\"], [\"nz-icon\", \"\", \"nzType\", \"check-circle\"], [\"nz-icon\", \"\", \"nzType\", \"info-circle\"], [\"nz-icon\", \"\", \"nzType\", \"exclamation-circle\"], [\"nz-icon\", \"\", \"nzType\", \"close-circle\"], [\"nz-icon\", \"\", \"nzType\", \"loading\"], [3, \"innerHTML\"]], template: function NzMessageComponent_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n        ɵngcc0.ɵɵlistener(\"@moveUpMotion.done\", function NzMessageComponent_Template_div_animation_moveUpMotion_done_0_listener($event) { return ctx.animationStateChanged.next($event); })(\"mouseenter\", function NzMessageComponent_Template_div_mouseenter_0_listener() { return ctx.onEnter(); })(\"mouseleave\", function NzMessageComponent_Template_div_mouseleave_0_listener() { return ctx.onLeave(); });\n        ɵngcc0.ɵɵelementStart(1, \"div\", 1);\n        ɵngcc0.ɵɵelementStart(2, \"div\", 2);\n        ɵngcc0.ɵɵelementContainerStart(3, 3);\n        ɵngcc0.ɵɵtemplate(4, NzMessageComponent_i_4_Template, 1, 0, \"i\", 4);\n        ɵngcc0.ɵɵtemplate(5, NzMessageComponent_i_5_Template, 1, 0, \"i\", 5);\n        ɵngcc0.ɵɵtemplate(6, NzMessageComponent_i_6_Template, 1, 0, \"i\", 6);\n        ɵngcc0.ɵɵtemplate(7, NzMessageComponent_i_7_Template, 1, 0, \"i\", 7);\n        ɵngcc0.ɵɵtemplate(8, NzMessageComponent_i_8_Template, 1, 0, \"i\", 8);\n        ɵngcc0.ɵɵelementContainerEnd();\n        ɵngcc0.ɵɵtemplate(9, NzMessageComponent_ng_container_9_Template, 2, 1, \"ng-container\", 9);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"@moveUpMotion\", ctx.instance.state);\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵproperty(\"ngClass\", \"ant-message-\" + ctx.instance.type);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngSwitch\", ctx.instance.type);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngSwitchCase\", \"success\");\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngSwitchCase\", \"info\");\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngSwitchCase\", \"warning\");\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngSwitchCase\", \"error\");\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngSwitchCase\", \"loading\");\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"nzStringTemplateOutlet\", ctx.instance.content);\n    } }, directives: [ɵngcc2.NgClass, ɵngcc2.NgSwitch, ɵngcc2.NgSwitchCase, ɵngcc5.NzStringTemplateOutletDirective, ɵngcc6.NzIconDirective], encapsulation: 2, data: { animation: [moveUpMotion] }, changeDetection: 0 });\nNzMessageComponent.ctorParameters = () => [\n    { type: ChangeDetectorRef }\n];\nNzMessageComponent.propDecorators = {\n    instance: [{ type: Input }],\n    destroyed: [{ type: Output }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NzMessageComponent, [{\n        type: Component,\n        args: [{\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                encapsulation: ViewEncapsulation.None,\n                selector: 'nz-message',\n                exportAs: 'nzMessage',\n                preserveWhitespaces: false,\n                animations: [moveUpMotion],\n                template: `\n    <div\n      class=\"ant-message-notice\"\n      [@moveUpMotion]=\"instance.state\"\n      (@moveUpMotion.done)=\"animationStateChanged.next($event)\"\n      (mouseenter)=\"onEnter()\"\n      (mouseleave)=\"onLeave()\"\n    >\n      <div class=\"ant-message-notice-content\">\n        <div class=\"ant-message-custom-content\" [ngClass]=\"'ant-message-' + instance.type\">\n          <ng-container [ngSwitch]=\"instance.type\">\n            <i *ngSwitchCase=\"'success'\" nz-icon nzType=\"check-circle\"></i>\n            <i *ngSwitchCase=\"'info'\" nz-icon nzType=\"info-circle\"></i>\n            <i *ngSwitchCase=\"'warning'\" nz-icon nzType=\"exclamation-circle\"></i>\n            <i *ngSwitchCase=\"'error'\" nz-icon nzType=\"close-circle\"></i>\n            <i *ngSwitchCase=\"'loading'\" nz-icon nzType=\"loading\"></i>\n          </ng-container>\n          <ng-container *nzStringTemplateOutlet=\"instance.content\">\n            <span [innerHTML]=\"instance.content\"></span>\n          </ng-container>\n        </div>\n      </div>\n    </div>\n  `\n            }]\n    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }]; }, { destroyed: [{\n            type: Output\n        }], instance: [{\n            type: Input\n        }] }); })();\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nclass NzMessageModule {\n}\nNzMessageModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: NzMessageModule });\nNzMessageModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function NzMessageModule_Factory(t) { return new (t || NzMessageModule)(); }, imports: [[BidiModule, CommonModule, OverlayModule, NzIconModule, NzOutletModule, NzMessageServiceModule]] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NzMessageModule, { declarations: function () { return [NzMessageContainerComponent, NzMessageComponent]; }, imports: function () { return [BidiModule, CommonModule, OverlayModule, NzIconModule, NzOutletModule, NzMessageServiceModule]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NzMessageModule, [{\n        type: NgModule,\n        args: [{\n                imports: [BidiModule, CommonModule, OverlayModule, NzIconModule, NzOutletModule, NzMessageServiceModule],\n                declarations: [NzMessageContainerComponent, NzMessageComponent],\n                entryComponents: [NzMessageContainerComponent]\n            }]\n    }], null, null); })();\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { NzMNComponent, NzMNContainerComponent, NzMNService, NzMessageComponent, NzMessageContainerComponent, NzMessageModule, NzMessageService, NzMessageServiceModule };\n\n//# sourceMappingURL=ng-zorro-antd-message.js.map","import { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class KnowledgeService {\r\n\r\n  constructor() { \r\n    \r\n  }\r\n\r\n  \r\n  dataList:any = [\r\n    {\r\n      title:'观察者模式和发布订阅',\r\n      content:`\r\n        <h2>观察者模式</h2>\r\n        <p>观察者模式指的是一个对象（Subject）维持一系列依赖于它的对象（Observer），当有关状态发生变更时 Subject 对象则通知一系列 Observer 对象进行更新。</p>\r\n        <p>在观察者模式中，Subject 对象拥有添加、删除和通知一系列 Observer 的方法等等，而 Observer 对象拥有更新方法等等。</p>\r\n        <p>在 Subject 对象添加了一系列 Observer 对象之后，Subject 对象则维持着这一系列 Observer 对象，当有关状态发生变更时 Subject 对象则会通知这一系列 Observer 对象进行更新。</p>\r\n        <p>// 被观察者</p>\r\n        <p>class Subject{</p>\r\n        <p>&nbsp;&nbsp;constructor(name){</p>\r\n        <p>&nbsp;&nbsp;&nbsp;&nbsp;this.name = name;</p>\r\n        <p>&nbsp;&nbsp;&nbsp;&nbsp;this.observers = []; //存放所有观察者</p>\r\n        <p>&nbsp;&nbsp;&nbsp;&nbsp;this.state = '天气晴朗';</p>\r\n        <p>&nbsp;&nbsp;}</p>\r\n        <p>&nbsp;&nbsp;// 接受观察者方法</p>\r\n        <p>&nbsp;&nbsp;attach(observer){</p>\r\n        <p>&nbsp;&nbsp;&nbsp;&nbsp;this.observers.push(observer);</p>\r\n        <p>&nbsp;&nbsp;}</p>\r\n        <p>&nbsp;&nbsp;setState(newState){</p>\r\n        <p>&nbsp;&nbsp;&nbsp;&nbsp;this.state = newState;</p>\r\n        <p>&nbsp;&nbsp;&nbsp;&nbsp;this.observers.forEach(it=>{</p>\r\n        <p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;it.update(newState);</p>\r\n        <p>&nbsp;&nbsp;&nbsp;&nbsp;})</p>\r\n        <p>&nbsp;&nbsp;}</p>\r\n        <p>}</p>\r\n        <p>// 观察者</p>\r\n        <p>class Observer{</p>\r\n        <p>&nbsp;&nbsp;constructor(name){</p>\r\n        <p>&nbsp;&nbsp;&nbsp;&nbsp;this.name = name;</p>\r\n        <p>&nbsp;&nbsp;}</p>\r\n        <p>&nbsp;&nbsp;update(state){</p>\r\n        <p>&nbsp;&nbsp;&nbsp;&nbsp;//每次被观察者数据发生变化这里都会更新</p>\r\n        <p>&nbsp;&nbsp;&nbsp;&nbsp;console.log(this.name)</p>\r\n        <p>&nbsp;&nbsp;&nbsp;&nbsp;console.log(state)</p>\r\n        <p>&nbsp;&nbsp;}</p>\r\n        <p>}</p>\r\n        <p>let sub = new Subject('男');</p>\r\n        <p>let o1 = new Observer('A');</p>\r\n        <p>let o2 = new Observer('B');</p>\r\n        <p>sub.attach(o1);</p>\r\n        <p>sub.attach(o2);</p>\r\n        <p>sub.setState('下雨了');</p>\r\n        <hr>\r\n        <h2>发布订阅</h2>\r\n        <p>发布订阅模式指的是希望接收通知的对象（Subscriber）基于一个主题通过自定义事件订阅主题，被激活事件的对象（Publisher）通过发布主题事件的方式通知各个订阅该主题的 Subscriber 对象。</p>\r\n        // 发布订阅 发布和订阅没有关系 中间通过数组进行关联\r\n        function Events(){\r\n          this.callbacks = []; //接收很多函数\r\n          this.results = [];\r\n        }\r\n        // 订阅\r\n        Events.prototype.on = function(callback){ //传一个函数\r\n          this.callbacks.push(callback);\r\n        }\r\n        // 发布\r\n        Events.prototype.emit = function(data){\r\n          this.results.push(data);\r\n          // 发布后，许多之前的函数依次执行\r\n          this.callbacks.forEach(cb=>{\r\n            cb(this.results);//cb是callbacks中的每一个参数，每一个回调函数，回调函数又将this.results作为参数\r\n          })\r\n        }\r\n        let e = new Events();\r\n        // on传了一个函数作为参数\r\n        e.on(function(res){\r\n          // if(res.length == 2){\r\n            console.log(res)\r\n          // }\r\n        })\r\n        e.emit();\r\n      `\r\n    },\r\n    {\r\n      title:'promise、await和定时器的执行顺序',\r\n      content:`\r\n      <h2>Promise内的任务为立即执行任务，也可以理解为同步任务。而then方法中的任务是微任务，会放在微任务列表中</h2>\r\n      <h2>async函数主要通过await关键字实现异步任务同步写法。如果没有await关键字，那么async函数跟普通函数没区别</h2>\r\n      <h2>setTimeout函数是一个宏任务，需要等到script整体的宏任务执行完再执行</h2>\r\n      <h2>执行顺序：</h2>\r\n      <p>1、立即执行函数和代码</p>\r\n      <p>2、微任务</p>\r\n      <p>3、宏任务（script和定时器）</p>\r\n      `\r\n    },\r\n    {\r\n      title:'数据类型',\r\n      content:`\r\n        <h2>原始数据类型7种：</h2>\r\n        <p>string、number、boolean、null、undefined、symbol、bigint</p>\r\n        <h2>引用数据类型object：</h2>\r\n        <p>object、array、function ... </p>\r\n      `\r\n    },\r\n    {\r\n      title:'angular的生命周期',\r\n      content:`\r\n      <p>ngOnChanges：组件输入属性发生变化时调用，首次在constructor之前调用，会触发多次</p>\r\n      <p>ngOnInit：只有组件初始化时调用一次，可以安全的使用组件中的方法</p>\r\n      <p>ngDoCheck：脏值检查，通常和ngOnChanges不会同时出现</p>\r\n      <p>ngAfterContentInit：组件内容初始化后调用</p>\r\n      <p>ngAfterContentChecked：组件内容每次检查后调用</p>\r\n      <p>AfterViewInit：在组件视图初始化后调用，在这里安全的使用@ViewChild引用的元素</p>\r\n      <p>ngAfterViewChecked：在组件视图每次检查后调用</p>\r\n      <p>ngOnDestory：组件销毁</p>\r\n      `\r\n    },\r\n    {\r\n      title:'angular组件和指令的区别',\r\n      content:`\r\n      \r\n      `\r\n    },\r\n    {\r\n      title:'angular路由传参的几种方式',\r\n      content:`\r\n      \r\n      `\r\n    },\r\n    {\r\n      title:'angular的好处',\r\n      content:`\r\n      <h2>Angular简化了MVC</h2>\r\n      <p>模型 - 视图 - 控制器（MVC）体系结构将应用程序分解为三个不同的组件，是开发面向用户的应用程序的常用策略。大多数Web开发框架都要求开发人员通过分别为每个组件设计和编写代码来实现MVC架构，然后编写更多代码将组件连接在一起。</p>\r\n      <p>Angular通过自动将不同的组件放在一起来简化和简化此过程，从而节省您的时间。因此，尽管Angular当然不是唯一支持MVC架构的框架（它也可以通过Vue和React完成，但是在这种情况下将组件放在一起需要更多的努力），它使得构建它比其他框架更容易和更快MVC架构。</p>\r\n      <h2>大Angular生态系统</h2>\r\n      <p>在技​​术生态系统方面，Angular更大更好。拥有庞大的个人和公司社区的技术更容易使用，因为支持很多，兼容性很普遍，并且技术被放弃的风险很低。</p>\r\n      <p>Angular拥有所有这些优势。它由Google的专门团队支持和构建，Google本身使用Angular。该公司还提供了Angular长期支持（LTS）。这意味着该技术巨头计划坚持使用Angular，并在未来进行扩展。</p>\r\n      <p>Angular生态系统的优势并不仅限于谷歌。Angular还拥有一个非常庞大的用户社区，他们愿意互相支持。这个社区提供了另一个支持和活力的来源。</p>\r\n      <p>就市场份额而言，Angular 似乎在JavaScript框架中位居第二，仅次于React，但在Vue面前。对于它的价值，Angular采用率似乎比React的增长速度更快（尽管Vue增长最快），因此Angular可能超越React成为不久的将来最受欢迎的框架。</p>\r\n      <h2>Angular Universal和服务器端呈现</h2>\r\n      <p>服务器端呈现是一种允许Web服务器生成通常由客户端构建的内容（换句话说，最终用户的浏览器）的技术。由于多种原因，服务器端呈现很有用。它使网页抓取工具可以轻松访问网页。它还提高了性能，尤其是在移动和低功耗设备上，由于资源不足，这些设备很难在客户端快速呈现内容。并且通过促进更快的页面加载时间来帮助用户满意。</p>\r\n      <p>常规Angular应用程序在浏览器中执行，并在DOM中呈现页面以响应用户的操作。但是，Angular社区提供了一个用于更改此行为的简单工具：Angular Universal，它允许通过服务器端呈现在服务器上生成静态应用程序页面。通过将Angular Universal与应用程序集成，可以生成服务器端页面并响应来自浏览器的请求。</p>\r\n      <p>使用Vue，React和大多数其他JavaScript框架进行服务器端渲染也是可能的，但它涉及更多步骤。使用Angular Universal，您只需打包您的应用程序以在服务器端运行并使用Universal进行部署。</p>\r\n      <h2>Angular材料设计</h2>\r\n      <p>从Angular 5.0开始，Angular功能在其框架中集成了对Material Design的支持。Material Design是一个开源工具集，可帮助开发人员快速构建有吸引力的界面。它简化了在Web，移动和桌面上工作的现代UI组件的创建。</p>\r\n      <p>Material Design主题和模板已预先配置为与Angular一起使用，使其易于集成到Angular项目中。此外，Material Design组件可以与Angular上的服务器端呈现结合使用，从而可以轻松地将它们合并到基于Angular的应用程序中，该应用程序利用上述服务器端性能改进。</p>\r\n      <p>大多数其他框架也适用于Material Design，但并非所有框架都为其提供官方的集成支持。</p>\r\n      <h2>Angular下的层次依赖注入</h2>\r\n      <p>Angular提供了分层依赖注入，这对于为应用程序组装数据服务特别有用。在分层依赖注入中，有一个与app的组件树平行的注入器树。通过依赖注入，类会从外部源请求依赖性，而不是自己创建依赖项。这可以提高性能。它还允许Web开发人员在外部导入依赖项而不是在应用程序中配置它们，从而简化了Web开发人员的工作。Angular在实例化时为类提供声明的依赖项。Angular依赖注入框架允许用户从可注入服务类提供数据，该服务类在其自己的文件中单独定义。服务所需的任何依赖项都可以“注入”其构造函数，并在运行时“注入”对象。这允许在需要时覆盖注入的对象，并在整个应用程序中提供一致性。</p>\r\n      <h2>Angular的模块化设计</h2>\r\n      <p>在Angular中，一切都被组织成模块，从服务到指令的所有内容都必须组织成一个或多个模块。模块通过将代码划分为功能和可重用的块来增加代码的可重用性。它们还极大地简化了组织中的分工，以及代码的一致性和维护。</p>\r\n      <p>可以肯定的是，Angular在其模块化设计中绝不是独一无二的。模块化在许多现代编程语言和框架中很常见。</p>\r\n      <p>不过，我认为Angular特别模块化，因为不仅可以使用模块化架构来配置和部署基本代码组件（如函数），还可以使用Angular构建的任何对象。这种模块化在当今的微服务和分布式架构时代尤其有利，它们更容易与具有模块化设计的应用程序集成，因此可以作为跨大型基础架构的不同服务部分进行部署。</p>\r\n      <p>在大多数方面，Vue提供与Angular相同的模块化功能。React并不如此，因为React没有将模块化设计作为主要目标.。</p>\r\n      <p>(banq注：React是函数式风格，这与面向对象的模块化视角不同，管道化本身也是一种可组装的动态模块，这里有作者的偏见！)</p>\r\n      <h2>Angular单元测试</h2>\r\n      <p>Angular已准备好进行单元测试。单元测试是开发人员可以在软件交付管道中执行的第一类测试之一，以确保其代码满足预期的期望。单元测试允许开发人员在将新功能添加到应用程序的主代码库之前对其进行彻底测试。这样，可以快速检测到错误并与主代码库隔离，这使得它们更容易解决。</p>\r\n      <p>理论上，用任何编程语言编写的代码都可以进行单元测试。但是，单元测试兼容性是Angular的明确设计目标，这意味着开发人员不必修改他们的代码或使用特殊的测试工具来使用Angular进行单元测试。</p>\r\n      <h2>Angular使用TypeScript基础</h2>\r\n      <p>Angular应用程序是使用TypeScript构建的，TypeScript是JavaScript的超集。这意味着您可以将ES5或ES2015 + JavaScript代码插入.ts文件，它将完美运行。这也意味着只要在构建期间创建了正确的映射文件，就可以在浏览器或编辑器中直接调试TypeScript代码。</p>\r\n      <p>这不仅有助于简化您的工作流程并帮助您避免将文件从一种格式转换为另一种格式，而且因为使用TypeScript可以提高您及早发现错误的几率。请记住，如果您对TypeScript不满意，可以选择退出Angular中特定于TypeScript的功能。</p>\r\n      <p>Vue对TypeScript的支持有限（尽管Vue开发人员表示将在即将发布的Vue 3.0版本中进行更改）。对于React，它可以与TypeScript一起使用，但只有在将它添加到项目中时才能使用; TypeScript没有内置到React中。 </p>\r\n      <h2>不可否认，并非上述所有功能都是Angular独有的。您可以在其他Web框架中找到其中一些。但是当你将所有这些功能放在一起时，Angular因其多功能性，模块化和层次依赖注入而脱颖而出。如果这些特征对您的项目很重要，那么Angular可能最适合您的编程需求。</h2>\r\n      `\r\n    },\r\n    {\r\n      title:'==和===的区别，什么情况下用==',\r\n      content:`\r\n      \r\n      `\r\n    },\r\n    {\r\n      title:'数组方法，字符串方法',\r\n      content:`\r\n      \r\n      `\r\n    },\r\n    {\r\n      title:'常用的es6功能',\r\n      content:`\r\n      <h2>Set() - 数组去重</h2>\r\n      <p>new Set([1,2,1,3,2,4,2,3]) // {1, 2, 3, 4}</p>\r\n      <p>Array.from(new Set([1,2,1,3,2,4,2,3])) // [1, 2, 3, 4]</p>\r\n      <p>Array.from()方法从一个类似数组或可迭代对象创建一个新的，浅拷贝的数组实例</p>\r\n      `\r\n    },\r\n    {\r\n      title:'null和undefined的区别',\r\n      content:`\r\n      \r\n      `\r\n    },\r\n    {\r\n      title:'',\r\n      content:`\r\n      \r\n      `\r\n    },\r\n    {\r\n      title:'typeof和instanceof类型判断',\r\n      content:`\r\n        <h2>typeof对于原始类型来说，除了null都可以显示正确的类型</h2>\r\n        <p>typeof 1 // number</p>\r\n        <p>typeof '1' // string</p>\r\n        <p>typeof undefined // undefined</p>\r\n        <p>typeof true // boolean</p>\r\n        <p>typeof Symbol() // symbol</p>\r\n        <h2>typeof对于对象来说，除了函数都会显示object，所以说typeof并不能准确判断变量到底是什么类型</h2>\r\n        <p>typeof [] // object </p>\r\n        <p>typeof {} // object</p>\r\n        <p>typeof console.log // function</p>\r\n        <h2>如果我们想判断一个对象的正确类型，这是可以考虑使用instanceof，它的内部机制是通过原型链来判断的</h2>\r\n        <p>const Person = function (){}</p>\r\n        <p>const p1 = new Person()</p>\r\n        <p>P1 instanceof Person // true</p>\r\n        <p>var str = 'string';</p>\r\n        <p>str instanceof String // false</p>\r\n        <p>var str2 = new String('string');</p>\r\n        <p>str2 instanceof String // true</p>\r\n        <h2>对于原始类型，如果用instanceof判断类型，需要new，否则为false</h2>\r\n      `\r\n    },\r\n    {\r\n      title:'类型转换',\r\n      content:`\r\n        <h2>在JS中类型转换只有三种，分别是 转为布尔值、转为数字、转为字符串</h2>\r\n        <p>转Boolean：在条件判断时，除了undefined、null、false、NaN、''、0、-0，其他所有值都转为true，包括所有对象。</p>\r\n        <h2>对象转为原始类型：对象在转换类型时，会调用内置的ToPrimitive函数，该函数算法逻辑如下</h2>\r\n        <p>如果已经是原始类型了，就不需要转换了</p>\r\n        <p>调用x.valueOf() 如果转换为基础类型，就返回转换的值</p>\r\n        <p>调用x.toString() 如果转换为基础类型，就返回转换的值</p>\r\n        <p>如果都没有返回原始类型，就会报错</p>\r\n      `\r\n    },\r\n    {\r\n      title:'闭包',\r\n      content:`\r\n        <h2>闭包的定义其实很简单：函数A内部有一个函数B，函数B可以访问到函数A中的变量，那么函数B就是闭包。</h2>\r\n        <h2>闭包存在的意义就是让我们可以间接访问函数内部的变量。</h2>\r\n        <h2>经典面试题：循环中使用闭包解决var定义函数的问题：</h2>\r\n        <p>for(var i=0;i<5;i++){</p>\r\n        <p>&nbsp;&nbsp;setTimeout(function timer(){</p>\r\n        <p>&nbsp;&nbsp;&nbsp;&nbsp;console.log(i)</p>\r\n        <p>&nbsp;&nbsp;},1000)</p>\r\n        <p>}</p>\r\n        <h2>因为setTimeout是个异步函数，所以会先把循环全部执行完毕，这时候i就是5了，所有会一直输入5。</h2>\r\n        <h3>第一种解决办法（推荐）：使用let定义i来解决</h3>\r\n        <p>for(let i=0;i<5;i++){</p>\r\n        <p>&nbsp;&nbsp;setTimeout(function timer(){</p>\r\n        <p>&nbsp;&nbsp;&nbsp;&nbsp;console.log(i)</p>\r\n        <p>&nbsp;&nbsp;},1000)</p>\r\n        <p>}</p>\r\n        <hr>\r\n        <h3>第二种解决办法：使用闭包来解决</h3>\r\n        <p>for(var i=0;i<5;i++){</p>\r\n        <p>&nbsp;&nbsp;;(function(t){</p>\r\n        <p>&nbsp;&nbsp;&nbsp;&nbsp;setTimeout(function timer(){</p>\r\n        <p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;console.log(i)</p>\r\n        <p>&nbsp;&nbsp;&nbsp;&nbsp;},1000)</p>\r\n        <p>&nbsp;&nbsp;})(i)</p>\r\n        <p>}</p>\r\n      `\r\n    },\r\n    {\r\n      title:'深拷贝浅拷贝',\r\n      content:`\r\n        <h2>浅拷贝：首先可以通过Object.assign来解决这个问题，Object.assign只会拷贝所有的属性值到新的对象中，如果属性值是对象的话，拷贝的是地址。</h2>\r\n        <p>let a = { age:30 };</p>\r\n        <p>let b = Object.assign({},a);</p>\r\n        <p>a.age = 1;</p>\r\n        <p>console.log(b.age) // 30</p>\r\n        <h2>还可以通过展开运算符...来实现浅拷贝</h2>\r\n        <p>let a = { age:30 };</p>\r\n        <p>let b = { ...a };</p>\r\n        <p>a.age = 1;</p>\r\n        <p>console.log(b.age) // 30</p>\r\n        <h2>通过浅拷贝能够解决大部分问题，但是当我们遇到以下情况就需要使用深拷贝了：</h2>\r\n        <p>let a = {</p>\r\n        <p>&nbsp;&nbsp;age:30,</p>\r\n        <p>&nbsp;&nbsp;jobs:{</p>\r\n        <p>&nbsp;&nbsp;&nbsp;&nbsp;type:'c'</p>\r\n        <p>&nbsp;&nbsp;}</p>\r\n        <p>}</p>\r\n        <p>let b = { ...a };</p>\r\n        <p>a.jobs.type = 'A';</p>\r\n        <p>console.log(b.jobs.type) // A 浅拷贝只解决了第一层的问题，如果接下去的值中还有对象的话，就需要用深拷贝</p>\r\n        <h2>深拷贝：JSON.parse(JSON.stringify(a))</h2>\r\n        <p>a.jobs.type = 'A';</p>\r\n        <p>console.log(b.jobs.type) // c</p>\r\n        <p>该方法有局限性：会忽略undefined、会忽略symbol、不能序列化函数、不能解决循环引用的对象</p>\r\n      `\r\n    },\r\n    {\r\n      title:'原型',\r\n      content:`\r\n        <h2>原型链就是多个对象通过_proto_的方式连接了起来。为什么obj可以访问到valueOf函数，就是因为obj通过原型链找到了valueOf函数。</h2>\r\n        <p>Object是所有对象的爸爸，所有对象都可以通过_proto_找到它。</p>\r\n        <p>Function是所有函数的爸爸，所有函数都可以通过_proto_找到它。</p>\r\n        <p>函数的prototype是一个对象。</p>\r\n        <p>对象的_proto_属性指向原型，_proto_将对象和原型连接起来组成了原型链。</p>\r\n      `\r\n    },\r\n    {\r\n      title:'var、let和const的区别',\r\n      content:`\r\n        <h2>什么是提升？什么是暂时性死区？var、let和const的区别是什么？</h2>\r\n        <p>函数提升优先于变量提升，函数提升会把整个函数挪到作用域顶部，变量提升只会把声明挪到作用域顶部。</p>\r\n        <p>var存在提升，我们能在声明之前使用。let和const因为暂时性死区的原因，不能在声明前使用。</p>\r\n        <p>var在全局作用域下声明变量会导致变量挂载在window上，let和const不会。</p>\r\n        <p>let和const作用基本一致，但const声明的变量不能再次赋值。</p>\r\n      `\r\n    },\r\n    {\r\n      title:'原型继承和Class继承',\r\n      content:`\r\n        <h2>原型如何实现继承？Class如何实现继承？Class本质是什么？</h2>\r\n        <p>class:其实在jS中并不存在类，class只是语法糖，本质还是函数</p>\r\n        <p>class Parent(){  }</p>\r\n        <p>Parent instanceof Function // true</p>\r\n        <hr>\r\n        <h3>组合继承：组合继承是最常用的继承方式</h3>\r\n        <p>function Parent(value){\r\n        <p>&nbsp;&nbsp;this.val = value;\r\n        <p>}\r\n        <p>Parent.prototype.getValue = function(){</p>\r\n        <p>&nbsp;&nbsp;console.log(this.val)</p>\r\n        <p>}</p>\r\n        <p>function Child(value){</p>\r\n        <p>&nbsp;&nbsp;Parent.call(this,value);</p>\r\n        <p>}</p>\r\n        <p>Child.prototype = new Parent();</p>\r\n        <p>const child = new Child(1);</p>\r\n        <p>child.getValue() // 1</p>\r\n        <p>child instanceof Parent // true</p>\r\n        <h2>以上继承的方式核心是在子类的构造函数中通过 Parent.call(this) 继承父类的属性，然后改变子类的原型为 new Parent() 来继承父类的函数。</h2>\r\n        <h2>这种继承方式有点在于构造函数可以传参，不会与父类引用属性共享，可以复用父类的函数，但是也存在一个缺点就是在继承父类函数的时候调用了父类的构造函数，导致子类的原型上多了不需要的父类属性，存在内存上的浪费。</h2>\r\n        <hr>\r\n        <h3>组合类继承：这种继承方式对组合继承进行了优化，组合继承缺点在于继承父类函数时调用了构造函数，我们只需要优化掉这点就行。</h3>\r\n        <p>function Parent(value){</p>\r\n        <p>&nbsp;&nbsp;this.val = value;</p>\r\n        <p>}</p>\r\n        <p>Parent.prototype.getValue = function(){</p>\r\n        <p>&nbsp;&nbsp;console.log(this.val)</p>\r\n        <p>}</p>\r\n        <p>function Child(value){</p>\r\n        <p>&nbsp;&nbsp;Parent.call(this,value);</p>\r\n        <p>}</p>\r\n        <p>Child.prototype = Object.create(Parent.ptototype,{</p>\r\n        <p>&nbsp;&nbsp;constructor:{</p>\r\n        <p>&nbsp;&nbsp;&nbsp;&nbsp;value:Child,</p>\r\n        <p>&nbsp;&nbsp;&nbsp;&nbsp;enumerable:false,</p>\r\n        <p>&nbsp;&nbsp;&nbsp;&nbsp;writable:true,</p>\r\n        <p>&nbsp;&nbsp;&nbsp;&nbsp;configurable:true</p>\r\n        <p>&nbsp;&nbsp;}</p>\r\n        <p>})</p>\r\n        <p>const child = new Child(1);</p>\r\n        <p>child.getValue() // 1</p>\r\n        <p>child instanceof Parent // true</p>\r\n        <h2>以上继承实现的核心就是将父类的原型赋值给子类，并且将构造函数设置为子类，这样既解决了无用的父类属性问题，还能正确的找到子类的构造函数。</h2>\r\n        <hr>\r\n        <h3>class类继承：以上两种继承方式都是通过原型去解决的，在ES6中，我们可以使用class去实现继承，并且实现起来很简单。</h3>\r\n        <p>class Parent{</p>\r\n        <p>&nbsp;&nbsp;constructor(value){</p>\r\n        <p>&nbsp;&nbsp;&nbsp;&nbsp;this.val = value;</p>\r\n        <p>&nbsp;&nbsp;}</p>\r\n        <p>}</p>\r\n        <p>getValue(){</p>\r\n        <p>&nbsp;&nbsp;console.log(this.val)</p>\r\n        <p>}</p>\r\n        <p>class Child extends Parent{</p>\r\n        <p>&nbsp;&nbsp;constructor(value){</p>\r\n        <p>&nbsp;&nbsp;&nbsp;&nbsp;super(value)</p>\r\n        <p>&nbsp;&nbsp;&nbsp;&nbsp;this.val = value;</p>\r\n        <p>&nbsp;&nbsp;}</p>\r\n        <p>}</p>\r\n        <p>let child = new Child(1);</p>\r\n        <p>child.getValue() // 1</p>\r\n        <p>child instanceof Parent // true</p>\r\n        <h2>class实现继承的核心在于使用 extends 表明继承自哪个父类，并且在子类构造函数中必须调用super，因为这段代码可以看成 Parent.call(this,value)</h2>\r\n      `\r\n    },\r\n    {\r\n      title:'模块化',\r\n      content:`\r\n        <h2>为什么要使用模块化？都有哪几种方式可以实现模块化，各有什么特点？</h2>\r\n        <p>&nbsp;&nbsp;1、解决命名冲突</p>\r\n        <p>&nbsp;&nbsp;2、提供复用性</p>\r\n        <p>&nbsp;&nbsp;3、提高代码可维护性</p>\r\n        <hr>\r\n        <h2>立即执行函数：</h2>\r\n        <p>&nbsp;&nbsp;使用立即执行函数实现模块化是常见的手段，通过函数作用域解决了命名冲突、污染全局作用域的问题。</p>\r\n        <p>&nbsp;&nbsp;(function(globalVariable){</p>\r\n        <p>&nbsp;&nbsp;&nbsp;&nbsp;globalVariable.test = function(){</p>\r\n        <p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// ... 声明各种变量、函数，都不会污染全局作用域</p>\r\n        <p>&nbsp;&nbsp;&nbsp;&nbsp;}</p>\r\n        <p>&nbsp;&nbsp;})(globalVariable)</p>\r\n      `\r\n    },\r\n    {\r\n      title:'实现一个简单的promise',\r\n      content:`\r\n        <h2>// 三个常量用于表示状态</h2>\r\n        <p>const Pending = 'pending';</p>\r\n        <p>const Resolved = 'resolved';</p>\r\n        <p>const Rejected = 'rejected';</p>\r\n        <p>function Promise(fn){</p>\r\n        <p>const that = this;</p>\r\n        <p>this.state = Pending;</p>\r\n        <p>// value变量用来保存resolve或者reject中传入的值</p>\r\n        <p>this.value = null; </p>\r\n        <p>// 用于保存then中的回调，因为当执行玩Promise时状态可能还是等待中</p>\r\n        <p>that.resolvedCallbacks = [];</p>\r\n        <p>that.rejectedCallbacks = [];</p>\r\n        <p>function resolve(value){</p>\r\n        <p>&nbsp;&nbsp;// 首先两个函数都得判断当前状态是否为等待中</p>\r\n        <p>&nbsp;&nbsp;if(that.state === Pending){</p>\r\n        <p>&nbsp;&nbsp;&nbsp;&nbsp;that.state = Resolved;</p>\r\n        <p>&nbsp;&nbsp;&nbsp;&nbsp;this.value = value;</p>\r\n        <p>&nbsp;&nbsp;&nbsp;&nbsp;// 遍历回调数组并执行</p>\r\n        <p>&nbsp;&nbsp;&nbsp;&nbsp;that.resolvedCallbacks.map(cd=>{</p>\r\n        <p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;cd(that.value);</p>\r\n        <p>&nbsp;&nbsp;&nbsp;&nbsp;})</p>\r\n        <p>}</p>\r\n        <p>function reject(value){</p>\r\n        <p>&nbsp;&nbsp;if(that.state === Pending){</p>\r\n        <p>&nbsp;&nbsp;&nbsp;&nbsp;that.state = Rejected;</p>\r\n        <p>&nbsp;&nbsp;&nbsp;&nbsp;that.value = value;</p>\r\n        <p>&nbsp;&nbsp;&nbsp;&nbsp;that.rejectedCallbacks.map(cb=>{</p>\r\n        <p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;cb(that.value);</p>\r\n        <p>&nbsp;&nbsp;&nbsp;&nbsp;})</p>\r\n        <p>&nbsp;&nbsp;}</p>\r\n        <p>}</p>\r\n        <p>// 完成以上两个函数以后，我们就该实现如何执行Promise中传入的函数了</p>\r\n        <p>try{</p>\r\n        <p>&nbsp;&nbsp;fn(resolve,reject);</p>\r\n        <p>}cach(e){</p>\r\n        <p>&nbsp;&nbsp;reject(e);</p>\r\n        <p>}</p>\r\n        <p>// 最后我们来实现较为复杂的then函数</p>\r\n        <p>Promise.prototype.then = function(onFulfilled,onRejected){</p>\r\n        <p>&nbsp;&nbsp;const that = this;</p>\r\n        <p>&nbsp;&nbsp;// 判断两个参数是否为函数类型，因为这两个参数是可选参数</p>\r\n        <p>&nbsp;&nbsp;onFulfilled = typeof onFulfilled === 'function' ? onFulfilled : v=>v;</p>\r\n        <p>&nbsp;&nbsp;onRejected = typeof onRejected === 'function' ? onRejected : e=>throw e;</p>\r\n        <p>&nbsp;&nbsp;// 当状态不是等待态时，就去执行相对应的函数。如果是等待态，就往回调函数中push</p>\r\n        <p>&nbsp;&nbsp;if(this.state === Pending){</p>\r\n        <p>&nbsp;&nbsp;&nbsp;&nbsp;this.resolvedCallbacks.push(onFulfilled);</p>\r\n        <p>&nbsp;&nbsp;&nbsp;&nbsp;this.rejectedCallbacks.push(onRejected);</p>\r\n        <p>&nbsp;&nbsp;}</p>\r\n        <p>&nbsp;&nbsp;if(this.state === Resolved){</p>\r\n        <p>&nbsp;&nbsp;&nbsp;&nbsp;onFulfilled(that.value);</p>\r\n        <p>&nbsp;&nbsp;}</p>\r\n        <p>&nbsp;&nbsp;if(this.state === Rejected){</p>\r\n        <p>&nbsp;&nbsp;&nbsp;&nbsp;onRejected(that.value);</p>\r\n        <p>&nbsp;&nbsp;}</p>\r\n        <p>}</p>\r\n      `\r\n    },\r\n    {\r\n      title:'手写call、apply和bind函数',\r\n      content:`\r\n        <h2>不传入第一个参数，那么上下文默认为window</h2>\r\n        <h2>改变了this指向，让新的对象可以执行该函数，并能接受参数</h2>\r\n        <h2>实现call：</h2>\r\n        <p>首先context为可选参数，如果不传默认上下文为window</p>\r\n        <p>接下来给context创建一个fn属性，并将值设置为需要调用的函数</p>\r\n        <p>因为call可以传入多个参数作为调用函数的参数，所以需要将参数剥离出来</p>\r\n        <p>然后调用函数并将对象上的函数删除</p>\r\n        <p>Function.prototype.myCall = function(context){</p>\r\n        <p>&nbsp;&nbsp;if(typeof this !== 'function'){</p>\r\n        <p>&nbsp;&nbsp;&nbsp;&nbsp;throw new TypeError('Error);</p>\r\n        <p>&nbsp;&nbsp;}</p>\r\n        <p>}</p>\r\n        <p> context = context || window;</p>\r\n        <p> context.fn = this;</p>\r\n        <p> const args = [...arguments].slice(1);</p>\r\n        <p> const result = context.fn(...args);</p>\r\n        <p> delete context.fn;</p>\r\n        <p> return result;</p>\r\n        <h2>实现apply：</h2>\r\n        <p> Function.prototype.myApply = function(context){</p>\r\n        <p> &nbsp;&nbsp;if(typeof this !== 'function'){</p>\r\n        <p> &nbsp;&nbsp;&nbsp;&nbsp;throw new TypeError('Error');</p>\r\n        <p> &nbsp;&nbsp;}</p>\r\n        <p> }</p>\r\n        <p> context = context || window;</p>\r\n        <p> context.fn = this;</p>\r\n        <p> let result;</p>\r\n        <p> // 处理参数和call有区别</p>\r\n        <p> if(arguments[1]){</p>\r\n        <p> &nbsp;&nbsp;result = context.fn(...arguments[1]);</p>\r\n        <p> }else{</p>\r\n        <p> &nbsp;&nbsp;result = context.fn();</p>\r\n        <p> }</p>\r\n        <p> delete context.fn;</p>\r\n        <p> return result;</p>\r\n        <h2>bind实现：</h2>\r\n        <p>bind是实现对比其他两个函数略微的复杂了一些，因为bind需要返回一个函数，需要判断一些边界问题</p>\r\n        <p>bind返回了一个函数，对于函数来说有两种方式调用，一种是直接调用，一种是通过new的方式</p>\r\n        <p>对于直接调用来说，这里选择了apply的方式实现，但是对于参数需要注意以下情况</p>\r\n        <p>因为bind可以实现类似这样的代码 f.bind(obj,1)(2)，所以我们需要将两边的参数拼接起来，于是就有了这样的实现 args.concat(...arguments)</p>\r\n        <p>通过new的方式，不会被任何方式改变this，所以我们需要忽略传入的this</p>\r\n        <p>Function.prototype.myApply = function(context){</p>\r\n        <p>&nbsp;&nbsp;if(typeof this !== 'function'){</p>\r\n        <p>&nbsp;&nbsp;&nbsp;&nbsp;throw new TypeError('Error');</p>\r\n        <p>&nbsp;&nbsp;}</p>\r\n        <p>}</p>\r\n        <p>const _this = this;</p>\r\n        <p>const args = [...arguments].slice(1);</p>\r\n        <p>// 返回一个函数</p>\r\n        <p>return function F(){</p>\r\n        <p>&nbsp;&nbsp;// 因为返回了一个函数，我们可以new F()，所以需要判断</p>\r\n        <p>&nbsp;&nbsp;if(this instanceof F){</p>\r\n        <p>&nbsp;&nbsp;&nbsp;&nbsp;return new _this(...args,...arguments);</p>\r\n        <p>&nbsp;&nbsp;}</p>\r\n        <p>&nbsp;&nbsp;return _this.apply(context,args.concat(...arguments))</p>\r\n        <p>}</p>\r\n      `\r\n    },\r\n    {\r\n      title:'new',\r\n      content:`\r\n        <h2>new的原理是什么？通过new的方式创建对象和通过字面量创建有什么区别？</h2>\r\n        </p>在调用new的过程中会发生4件事：</p>\r\n        </p>&nbsp;&nbsp;1、新生成了一个对象</p>\r\n        </p>&nbsp;&nbsp;2、链接到原型</p>\r\n        </p>&nbsp;&nbsp;3、绑定this</p>\r\n        </p>&nbsp;&nbsp;4、返回新对象</p>\r\n        <h2>实现一个new：</h2>\r\n        <p>&nbsp;&nbsp;1、创建一个空对象</p>\r\n        <p>&nbsp;&nbsp;2、获取构造函数</p>\r\n        <p>&nbsp;&nbsp;3、设置空对象的原型</p>\r\n        <p>&nbsp;&nbsp;4、绑定this并执行构造函数</p>\r\n        <p>&nbsp;&nbsp;5、确保返回值为对象</p>\r\n        <p>&nbsp;&nbsp;function cerate(){</p>\r\n        <p>&nbsp;&nbsp;&nbsp;&nbsp;let obj = {};</p>\r\n        <p>&nbsp;&nbsp;&nbsp;&nbsp;let Con = [].shift.call(arguments);</p>\r\n        <p>&nbsp;&nbsp;&nbsp;&nbsp;obj._proto_ = Con.prototype;</p>\r\n        <p>&nbsp;&nbsp;&nbsp;&nbsp;let result = Con.apply(obj,arguments);</p>\r\n        <p>&nbsp;&nbsp;&nbsp;&nbsp;return result instanceof Object ? result : obj;</p>\r\n        <p>&nbsp;&nbsp;}\r\n        <p>对于对象来说，其实都是通过new产生的，无论是function Foo() 还是 let {a:1}</p>\r\n        <p>对于创建一个对象来说，更推荐使用字面量的方式创建对象（无论性能上还是可读性），因为使用new Object()的方式创建对象需要通过作用域一层层找到Object，但是使用字面量的方式就没有这个问题</p>\r\n        <p>function Foo(){</p>\r\n        <p>&nbsp;&nbsp;// function 就是个语法糖，内部等同于 new Function()</p>\r\n        <p>}</p>\r\n        <p>let a = {b:1};//这个字面量内部也是使用了new Object()</p>\r\n      `\r\n    },{\r\n      title:'instanceof的原理',\r\n      content:`\r\n        <h2>instanceof可以正确的判断对象的类型，因为内部机制是通过判断对象的原型链中是不是能找到类型的prototype</h2>\r\n        <h2>实现instanceof：</h2>\r\n        <p>&nbsp;&nbsp;首先获取类型的原型</p>\r\n        <p>&nbsp;&nbsp;然后获得对象的原型</p>\r\n        <p>&nbsp;&nbsp;一直循环判断对象的原型是否等于类型的原型，知道对象原型为null，因为原型链最终为null</p>\r\n        <p>function myInstanceof(left,right){</p>\r\n        <p>&nbsp;&nbsp;let prototype = right.prototype;</p>\r\n        <p>&nbsp;&nbsp;left = left._proto_;</p>\r\n        <p>&nbsp;&nbsp;while(true){</p>\r\n        <p>&nbsp;&nbsp;&nbsp;&nbsp;if(left === null || left === undefined){</p>\r\n        <p>&nbsp;&nbsp;&nbsp;&nbsp;return false;</p>\r\n        <p>&nbsp;&nbsp;}</p>\r\n        <p>&nbsp;&nbsp;if(prototype === left){</p>\r\n        <p>&nbsp;&nbsp;&nbsp;&nbsp;return true;</p>\r\n        <p>&nbsp;&nbsp;}</p>\r\n        <p>&nbsp;&nbsp;left = left._prpto_;</p>\r\n        <p>&nbsp;&nbsp;}</p>\r\n        <p>}</p>\r\n      `\r\n    },{\r\n      title:'跨域',\r\n      content:`\r\n        <h2>什么是跨域？为什么浏览器要使用同源策略？有几种方式可以解决跨域问题？了解预检请求？</h2>\r\n        <p>因为浏览器出于安全考虑，有同源策略。如果协议、域名或者端口有一个不同，就是跨域，ajax请求会失败</p>\r\n        <p>那么是出于什么安全考虑才会引入这种机制呢？其实主要是用来防止CSRF攻击的，CSRF攻击是利用用户的登录态发起恶意请求</p>\r\n        <p>在没有同源策略的情况下，A网站可以被任意其他来源的ajax访问到内容。如果你当前A网站还存在登录态，那么对方就可以通过ajax获得你的任何信息。当然跨域并不能完全阻止CSRF</p>\r\n        <p>请求跨域了，那么请求到底发出去没有？请求必然是发出去了，但是浏览器拦截了响应。你可能会疑问明明通过表单的方式可以发起跨域请求，为什么ajax就不会。归根结底，跨域是为了阻止用户读取到另一个域名下的内容，ajax可以获取响应，浏览器认为这不安全，所以拦截了响应。但是表单并不会获取新的内容，所以可以发起跨域请求。同时也说明了跨域并不能完全阻止CSRF，因为毕竟请求发出去了</p>\r\n        <h2>解决跨域的几种方式：</h2>\r\n        <p>JSONP：</p>\r\n        <p>JSONP的原理很简单，就是利用<script>标签没有跨域限制的漏洞。通过script标签指向一个需要访问的地址并提供一个回调函数来接收数据</p>\r\n        <p><script src=\"http://dome/api?param1=a&param2=b&callback=jsonp\"></script></p>\r\n        <p><script></p>\r\n        <p>&nbsp;&nbsp;function jsonp(data){</p>\r\n        <p>&nbsp;&nbsp;&nbsp;&nbsp;console.log(data)</p>\r\n        <p>&nbsp;&nbsp;}</p>\r\n        <p></script></p>\r\n        <p>JSONP使用简单且兼容性不错，但是只限于get请求</p>\r\n        <p>在开发中可能会遇到多个JSONP请求的回调函数名是相同的，这时候就需要自己封装一个JSONP</p>\r\n        <p>function jsonp(url,jsonpCallback,success){</p>\r\n        <p>&nbsp;&nbsp;let script = document.createElement('script');</p>\r\n        <p>&nbsp;&nbsp;script.src = url;</p>\r\n        <p>&nbsp;&nbsp;script.async = true;</p>\r\n        <p>&nbsp;&nbsp;script.type = 'text/javascript';</p>\r\n        <p>&nbsp;&nbsp;window[jsonpCallback] = function(data){</p>\r\n        <p>&nbsp;&nbsp;&nbsp;&nbsp;success && success(data);</p>\r\n        <p>&nbsp;&nbsp;}</p>\r\n        <p>&nbsp;&nbsp;document.body.appendChild(srcipt);</p>\r\n        <p>}</p>\r\n        <p>jsonp('http://dome/api','callback',function(value){</p>\r\n        <p>&nbsp;&nbsp;console.log(value)</p>\r\n        <p>});</p>\r\n        <p>localhost和127.0.0.1虽然都指向是本机，但也属于跨域。</p>\r\n      `\r\n    },\r\n    {\r\n      title:'性能优化',\r\n      content:`\r\n        <p>1、图片编码优化，尽量使用svg和字体图标</p>\r\n        <p>2、图片懒加载</p>\r\n        <p>3、模块、组件按需加载</p>\r\n        <p>4、防抖（禁止连续多次重复调用接口）</p>\r\n        <p>5、代码优化（缩小体积）</p>\r\n        <p>6、css样式优化，避免使用table布局（table要等其他的内容完全下载之后才会显示，比div+css慢），避免设置多层内联样式，避免使用css表达式calc()</p>\r\n        <p>7、减少多DOM的操作</p>\r\n        <p>8、减少http请求</p>\r\n        <p></p>\r\n      `\r\n    },\r\n    {\r\n      title:'cookies，sessionStorage和localStorage的区别',\r\n      content:`\r\n        <h2>sessionstorage(session)中的数据，这些数据只有在同一个会话中的页面才能访问并且当会话结束后数据也随之销毁，因为sessionStorage不是一种持久化的本地存储，仅仅是会话级别的存储。而localStorage用于持久化的本地存储，除非主动删除数据，否则数据是永远不会过期的</h2>\r\n        <p>web storage和cookie的区别：</p>\r\n        <p>web storage和cookie相似，区别是它是为了更大容量存储设计的。Cookie的大小是受限的，并且每次你请求一个新的页面的时候Cookie都会被发送过去，这样无形中浪费了带宽，另外cookie还需要指定作用域，不可以跨域使用。除此之外，web storage拥有setItem，getItem，removeItem，clear等方法，不像cookie需要前端开发者自己封装setCookie，getCookie。但是cookie也是不可或缺的，cookie的作用是与服务器进行交互，作为HTTP规范的一部分而存在，而web storage仅仅是为了在本地存储数据而生。</p>\r\n      `\r\n    },\r\n    {\r\n      title:'CSS中link和@import的区别',\r\n      content:`\r\n        <h2>link属于HTML标签，而@import是css中提供的。在页面加载的时候，link会同时被加载，而@import引用的css会在页面加载完成后才会加载引用的css。link引入样式的权重大于@import的引用（@import是将引用的样式导入到当前的页面中）</h2>\r\n      `\r\n    },\r\n    {\r\n      title:'水平居中flex',\r\n      content:`\r\n        <p>div{</p>\r\n        <p>&nbsp;&nbsp;display:flex;</p>\r\n        <p>&nbsp;&nbsp;justify-content:center;</p>\r\n        <p>&nbsp;&nbsp;align-items:center;</p>\r\n        <p>}</p>\r\n      `\r\n    }\r\n  ]\r\n  // <h2></h2>\r\n  // <p></p>\r\n  // &nbsp;&nbsp;\r\n}\r\n","import { CommonModule } from '@angular/common';//在根模块导入BrowserModule，BrowserAnimationsModule，HttpClientModule，其他模块只需要导入CommonModule就可以使用双向绑定\r\nimport { NgModule } from '@angular/core';\r\nimport { NgZorroAntdMobileModule } from 'ng-zorro-antd-mobile';\r\nimport { PublicModule } from '../public/public.module';//公用组件引入\r\nimport { FormsModule } from '@angular/forms';//使用双向绑定\r\n\r\nimport { KnowledgeRouting,routeds } from './knowledge.routing';\r\nimport { KnowledgeService } from './knowledge.service';\r\n\r\nimport { NzMessageModule } from 'ng-zorro-antd/message';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    ...routeds\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    NgZorroAntdMobileModule,\r\n    PublicModule,\r\n    FormsModule,\r\n    KnowledgeRouting,\r\n    NzMessageModule\r\n  ],\r\n  providers: [\r\n    KnowledgeService\r\n  ],\r\n  bootstrap: []\r\n})\r\nexport class KnowledgeModule { }\r\n"],"sourceRoot":"webpack:///"}